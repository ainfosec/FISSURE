/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(packet_insert.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(d3aeba5c2611ec6ba0eb613eab08133e)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fuzzer/packet_insert.h>
// pydoc.h is automatically generated in the build directory
#include <packet_insert_pydoc.h>

void bind_packet_insert(py::module& m)
{

    using packet_insert = ::gr::fuzzer::packet_insert;


    py::class_<packet_insert, gr::block, gr::basic_block, std::shared_ptr<packet_insert>>(
        m, "packet_insert", D(packet_insert))

        .def(py::init(&packet_insert::make),
             py::arg("data"),
             py::arg("periodicity"),
             py::arg("offset") = 0,
             D(packet_insert, make))


        .def("rewind", &packet_insert::rewind, D(packet_insert, rewind))


        .def("set_data",
             &packet_insert::set_data,
             py::arg("data"),
             D(packet_insert, set_data))

        ;
}
